name: Website

on:
  push:
    branches:
      - master
  pull_request:

env:
  RUSTFLAGS: -Cdebuginfo=0
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  Ref-and-Tutorial:
    name: Doc Reference + Tutorials
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docs/reference
            docs/tutorials

      - name: Build Books
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: 'latest'

      - run: mdbook build docs/reference --dest-dir ${GITHUB_WORKSPACE}/public/docs/reference
      - run: mdbook build docs/tutorials --dest-dir ${GITHUB_WORKSPACE}/public/docs/tutorials
      - run: ls docs/reference
      - run: ls public/docs/

      - uses: actions/upload-artifact@v4
        with:
          name: Doc Reference
          path: |
            public/docs/reference
      - uses: actions/upload-artifact@v4
        with:
          name: Doc Tutorials
          path: |
            public/docs/tutorials

  Rust-API:
    name: Doc Rust API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rust-docs

      - name: Build API Doc
        env:
          FEATURES: parallel serde derive uuid_entity
        run: cargo doc --all --features "${FEATURES}" # --no-deps

      - uses: actions/upload-artifact@v4
        with:
          name: Doc Rust API
          path: |
            target/doc

  Website:
    name: Doc Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docs/website

      - name: Set Build Flags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Use the API to retrieve the github pages url and set an environment variable containing the value.
        run: echo "BUILD_FLAGS=--base-url $(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')" >> $GITHUB_ENV

      - uses: shalzz/zola-deploy-action@v0.18.0
        env:
          BUILD_ONLY: true
          BUILD_DIR: docs/website

      - uses: actions/upload-artifact@v4
        with:
          name: Doc Zola
          path: docs/website/public

  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [Ref-and-Tutorial, Rust-API, Website]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Doc Reference
          path: public/docs/reference

      - uses: actions/download-artifact@v4
        with:
          name: Doc Tutorials
          path: public/docs/tutorials

      - uses: actions/download-artifact@v4
        with:
          name: Doc Rust API
          path: public/docs/api

      - uses: actions/download-artifact@v4
        with:
          name: Doc Zola
          path: public

      - uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
